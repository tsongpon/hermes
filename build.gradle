import java.util.regex.Matcher

buildscript {
	ext {
		kotlinVersion = '1.2.30'
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'https://plugins.gradle.org/m2/' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath('com.adarshr:gradle-test-logger-plugin:1.1.2')
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
        classpath 'net.researchgate:gradle-release:2.6.0'
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'com.palantir.docker'
apply plugin: 'net.researchgate.release'

testlogger {
    theme 'standard' // pick a theme - mocha, standard or plain
    showExceptions true // set to false to disable detailed failure logs
    slowThreshold 1000 // set threshold in milliseconds to highlight slow tests
    showSummary true // displays a breakdown of passes, failures and skips along with total duration
}

group = 'asia.vmdigital'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.kafka:spring-kafka:2.1.2.RELEASE')
	compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
	compile('org.jetbrains.kotlin:kotlin-reflect')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('com.fasterxml.jackson.core:jackson-core')
    compile('com.fasterxml.jackson.core:jackson-databind')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    compile('org.yaml:snakeyaml:1+')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.jayway.restassured:rest-assured:2.9.0')
	testCompile('com.jayway.restassured:json-schema-validator:2.9.0')
    testCompile('org.mockito:mockito-core:2.+')
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.2")
    testCompile("com.github.kristofa:mock-http-server:4.1") {
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }
}

test {
    //we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}


docker {
	name "${project.group}/${jar.baseName}"
	files jar.archivePath
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[skip ci][maven-release-plugin] - pre tag commit: '
    tagCommitMessage = '[skip ci][Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[skip ci][Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    scmAdapters = [
            net.researchgate.release.GitAdapter,
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        signTag = false
    }
}